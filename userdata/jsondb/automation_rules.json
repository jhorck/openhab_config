{
  "UpdateGasmeter": {
    "class": "org.openhab.core.automation.dto.RuleDTO",
    "value": {
      "triggers": [],
      "conditions": [],
      "actions": [
        {
          "inputs": {},
          "id": "script",
          "configuration": {
            "script": "// Smartmeter_Gasmeter + Smartmeter_Gas_Pulse_Count: Metadata - Custom - influxdb - value: gasmeter\n\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 1090.00);  // 29.10.2021\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 1363.00);  // 31.12.2021   273\n\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 1876.10);  // 30.09.2022\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 1886.56);  // 5.11.2022\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 1894.31);  // 12.11.2022\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 2022.29);  // 23.12.2022\n//events.sendCommand(\u0027Smartmeter_Gasmeter\u0027, 2371.07);  // 16.10.2023  verwarming aan\n//items.Smartmeter_Gasmeter.sendCommand(2412.98);      // 15.11.2023\n\n//events.sendCommand(\u0027Smartmeter_Gas_Pulse_Count\u0027, Math.round((itemRegistry.getItem(\u0027Smartmeter_Gas_Pulse_Count\u0027).getState() + 0.01) * 100) / 100 );\n",
            "type": "application/javascript"
          },
          "type": "script.ScriptAction"
        },
        {
          "inputs": {},
          "id": "script",
          "configuration": {
            "script": "",
            "type": "application/javascript"
          },
          "type": "script.ScriptAction"
        }
      ],
      "configuration": {},
      "configDescriptions": [],
      "uid": "UpdateGasmeter",
      "name": "Update Gasmeter",
      "tags": [
        "Script"
      ],
      "visibility": "VISIBLE",
      "description": ""
    }
  },
  "Update_Gasmeter": {
    "class": "org.openhab.core.automation.dto.RuleDTO",
    "value": {
      "triggers": [
        {
          "id": "1",
          "configuration": {
            "itemName": "Smartmeter_Gas_Pulse_Count"
          },
          "type": "core.ItemStateChangeTrigger"
        }
      ],
      "conditions": [],
      "actions": [
        {
          "inputs": {},
          "id": "2",
          "configuration": {
            "script": "//val Number previousCount \u003d Smartmeter_Gas_Pulse_Count.previousState(false, \"influxdb\").state as Number;\nval Number previousCount \u003d Smartmeter_Gas_Pulse_Count.previousState().state as Number;\nval Number currentCount  \u003d Smartmeter_Gas_Pulse_Count.state as Number;\nval Number countDiff \u003d currentCount - previousCount;\nvar Number totalCount;\nvar Number heatingCount \u003d 0.0;\nvar Number tapwaterCount \u003d 0.0;\n\n//logInfo(\"gasmeter\", \"Got new count: \" + currentCount + \", previous count: \" + previousCount + \", diff \u003d \" + countDiff);\n\nif(Smartmeter_Gasmeter.state !\u003d NULL) {\n  totalCount \u003d Smartmeter_Gasmeter.state as Number;\n} else {\n  totalCount \u003d 0.0;\n  logInfo(\"gasmeter\", \"Total count is NULL, reset it to 0.0\");\n}\n\nif(countDiff \u003e 0.0) {\n  // normal counting, add difference to total\n  totalCount \u003d totalCount + countDiff;\n  Smartmeter_Gasmeter.sendCommand(totalCount);\n//  logInfo(\"gasmeter\", \"Set total count to: \" + totalCount);\n  if(Gastherme_Speicherladung.state !\u003d NULL) {\n    if(Gastherme_Speicherladung.state \u003d\u003d ON) {\n      if(Smartmeter_Gasmeter_Tapwater.state !\u003d NULL) {\n        tapwaterCount \u003d Smartmeter_Gasmeter_Tapwater.state as Number;\n      }\n      tapwaterCount \u003d tapwaterCount + countDiff;\n      Smartmeter_Gasmeter_Tapwater.sendCommand(tapwaterCount);      \n    } else {\n      if(Smartmeter_Gasmeter_Heating.state !\u003d NULL) {\n        heatingCount \u003d Smartmeter_Gasmeter_Heating.state as Number;\n      }\n      heatingCount \u003d heatingCount + countDiff;\n      Smartmeter_Gasmeter_Heating.sendCommand(heatingCount);\n    }\n  }\n} else if (countDiff \u003c 0.0) {\n  // restart or rollover of counter\n  totalCount \u003d totalCount + currentCount;\n  Smartmeter_Gasmeter.sendCommand(totalCount);\n  logInfo(\"gasmeter\", \"Set total count to: \" + totalCount + \" (restart)\");\n}",
            "type": "application/vnd.openhab.dsl.rule"
          },
          "type": "script.ScriptAction"
        }
      ],
      "configuration": {},
      "configDescriptions": [],
      "uid": "Update_Gasmeter",
      "name": "Update Gasmeter",
      "tags": [],
      "visibility": "VISIBLE"
    }
  }
}